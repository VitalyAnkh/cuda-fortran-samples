#include "cuf_macros.CUF"

module mod1
use params  ! Define matrix m, n, k
contains
  attributes(global) subroutine test1(a,b,c)
  use wmma
  real(2), device :: a(k,m)
  real(2), device :: b(k,n)
  real(2), device :: c(m,n)
  WMMASubMatrix(WMMAMatrixA, 16, 16, 16, Real, WMMARowMajor) :: sa
  WMMASubMatrix(WMMAMatrixB, 16, 16, 16, Real, WMMAColMajor) :: sb
  WMMASubMatrix(WMMAMatrixC, 16, 16, 16, Real, WMMAKind2)    :: sc
  sc = real(0, kind=2)
  call wmmaLoadMatrix(sa, a(1,1), k)
  call wmmaLoadMatrix(sb, b(1,1), k)
  call wmmaMatmul(sc, sa, sb, sc)
  call wmmaStoreMatrix(c(1,1), sc, m)
  end subroutine
end module

subroutine volta(a,b,c)
use params
use cudafor
use mod1
real(4) :: a(k,m)
real(4) :: b(k,n)
real(4) :: c(m,n)

real(2), managed :: da(k,m)
real(2), managed :: db(k,n)
real(2), managed :: dc(m,n)

da = a
db = b
call test1<<<1,32>>>(da,db,dc)
istat = cudaDeviceSynchronize()
c  = dc

end subroutine
